// <auto-generated />
using System;
using BusFor.Models.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusFor.Migrations
{
    [DbContext(typeof(EFDatabaseContext))]
    [Migration("20201221140338_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("BusFor.Models.DataModel.BusInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("Time1")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Time2")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("BusInfos");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BusInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusPassengers");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.PassengerDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Validity")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PassengerDocuments");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.PlaneInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("BusinessPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<double>("EconomPrice")
                        .HasColumnType("float");

                    b.Property<string>("Location1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time1")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Time2")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("PlaneInfos");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.PlanePassenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateRace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntPlace")
                        .HasColumnType("int");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("PlaneInfoId")
                        .HasColumnType("int");

                    b.Property<string>("StringPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PassengerDocumentId");

                    b.ToTable("PlanePassengers");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.TrainInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("CoupePrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfCoupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfPlatzKarte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<double>("PlatzKartePrice")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("Time1")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Time2")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("TrainInfos");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.TrainPassenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateRace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPostel")
                        .HasColumnType("bit");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Van")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainPassengers");
                });

            modelBuilder.Entity("BusFor.Models.DataModel.PlanePassenger", b =>
                {
                    b.HasOne("BusFor.Models.DataModel.PassengerDocument", "PassengerDocument")
                        .WithMany()
                        .HasForeignKey("PassengerDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassengerDocument");
                });
#pragma warning restore 612, 618
        }
    }
}
